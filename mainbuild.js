var g=Object.defineProperty;var m=(c,t,i)=>t in c?g(c,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):c[t]=i;var h=(c,t,i)=>m(c,typeof t!="symbol"?t+"":t,i);import{createNoise2D as f}from"https://unpkg.com/simplex-noise@4.0.2/dist/esm/simplex-noise.js";import*as l from"https://cdn.jsdelivr.net/npm/three@0.166.1/+esm";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();class b{constructor({wrap:t,vertical:i,amplitude:s,frequency:e,attenuation:r,speed:a,flip:o}){h(this,"time",0);h(this,"lastTime",0);h(this,"deltaTime",0);h(this,"lineResolution",3);h(this,"isVisible",!1);this.wrap=t,this.isVertical=i,this.amplitudeStrength=s,this.frequency=e,this.attenuationPower=r,this.speed=a,this.flip=o,this.canvas=document.createElement("canvas"),this.wrap.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.noise=f(),this.init()}createGradient(t){const i=this.hexToRgb(t),s=this.isVertical?this.ctx.createLinearGradient(0,0,0,this.canvas.height):this.ctx.createLinearGradient(0,0,this.canvas.width,0);return s.addColorStop(0,`rgba(${i}, 0)`),s.addColorStop(.05,`rgba(${i}, 0)`),s.addColorStop(.3,`rgba(${i}, 0.2)`),s.addColorStop(.5,`rgba(${i}, 1)`),s.addColorStop(.7,`rgba(${i}, 0.2)`),s.addColorStop(.95,`rgba(${i}, 0)`),s.addColorStop(1,`rgba(${i}, 0)`),s}calcLineOffset(t,i,s,e){const{amplitude:r,frequency:a,noiseOffset:o}=i,n=this.noise(t*a+o,this.time)-1,p=Math.sin(t/s*Math.PI)**this.attenuationPower;return e+n*r*p}draw(t){this.isVisible&&(this.deltaTime=(t-this.lastTime)/1e3,this.lastTime=t,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.linesParams.forEach(i=>{const s=this.createGradient(i.color);if(this.ctx.beginPath(),this.isVertical){this.ctx.moveTo(this.canvas.width,0);for(let e=0;e<this.canvas.height;e+=this.lineResolution){const r=this.calcLineOffset(e,i,this.canvas.height,this.canvas.width);this.ctx.lineTo(r,e)}}else{this.ctx.moveTo(0,this.canvas.height);for(let e=0;e<this.canvas.width;e+=this.lineResolution){const r=this.calcLineOffset(e,i,this.canvas.width,this.canvas.height);this.ctx.lineTo(e,r)}}this.ctx.strokeStyle=s,this.ctx.lineWidth=1.5*this.ratio,this.ctx.stroke()}),this.time+=this.deltaTime*.1*this.speed),requestAnimationFrame(this.draw.bind(this))}hexToRgb(t){const i=parseInt(t.slice(1,3),16),s=parseInt(t.slice(3,5),16),e=parseInt(t.slice(5,7),16);return`${i},${s},${e}`}setUpSize(){this.scaleCanvas(this.wrap.offsetWidth,this.wrap.offsetHeight),new ResizeObserver(()=>{this.scaleCanvas(this.wrap.offsetWidth,this.wrap.offsetHeight),this.updateAmplitude(this.isVertical?this.canvas.width*.5*this.amplitudeStrength:this.canvas.height*.5*this.amplitudeStrength)}).observe(this.wrap)}scaleCanvas(t,i){if(typeof window===void 0)return null;this.ratio=Math.max(1.5,window.devicePixelRatio),this.canvas.width=t*this.ratio,this.canvas.height=i*this.ratio,this.canvas.style.width=`${t}px`,this.canvas.style.height=`${i}px`}setupIntersectionObserver(){const t={root:null,rootMargin:"0px",threshold:0};new IntersectionObserver(s=>{s.forEach(e=>{this.isVisible=e.isIntersecting})},t).observe(this.wrap)}updateAmplitude(t){this.linesParams.forEach(i=>i.amplitude=t)}spreadColors(t,i){const s=[],e=Math.ceil(i/t.length);if(t.length===4)return[t[0],t[0],t[1],t[1],t[2],t[3]];let r=0;for(let a=0;a<i;a++)a%e===0&&a!==0&&r++,s.push(t[r%t.length]);return s}nameToHex(t){return this.ctx.fillStyle=t,this.ctx.fillStyle}setUpLines(){const t=this.nameToHex("#39EED8"),{flip:i,colorOne:s,colorTwo:e,colorThree:r,colorFour:a}=this.wrap.dataset,o=[s,e,r,a].filter(Boolean).map(n=>this.nameToHex(n));o.length===0&&o.push(t),this.linesParams=this.spreadColors(o,6).map(n=>({color:n,amplitude:1,frequency:.01*this.frequency/this.ratio,noiseOffset:Math.random()*1e3})),i==="true"&&(this.canvas.style.transform=`scale${this.isVertical?"X":"Y"}(-1)`)}init(){this.setUpSize(),this.setUpLines(),this.setupIntersectionObserver(),this.draw(0)}}class S{constructor({container:t,boxSize:i,gap:s,rows:e,cols:r}){h(this,"seed",Math.random());h(this,"startTime",Date.now());h(this,"isVisible",!1);h(this,"animate",()=>{if(requestAnimationFrame(this.animate),this.isVisible){const t=(Date.now()-this.startTime)/1e3;this.scene.children[0].material.uniforms.uTime.value=t,this.renderer.render(this.scene,this.camera)}});this.container=t,this.boxSize=i,this.gap=s,this.rows=e,this.cols=r,this.canvasSize={w:this.cols*(this.boxSize+this.gap)-this.gap,h:this.rows*(this.boxSize+this.gap)-this.gap},this.init()}setupIntersectionObserver(){const t={root:null,rootMargin:"0px",threshold:0};new IntersectionObserver(s=>{s.forEach(e=>{this.isVisible=e.isIntersecting})},t).observe(this.container)}createBoxes(){const t=new l.PlaneGeometry(this.canvasSize.w,this.canvasSize.h),i=new l.ShaderMaterial({uniforms:{uTime:{value:0},uGap:{value:this.gap},uCols:{value:this.cols},uColor:{value:new l.Color("rgb(178, 169, 184)")},uSeed:{value:this.seed},uCanvasSize:{value:new l.Vector2(this.canvasSize.w,this.canvasSize.h)}},vertexShader:`varying vec2 vUv;void main() {  vUv = uv;  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);}`,fragmentShader:`uniform float uTime;uniform float uGap;uniform float uCols;uniform float uSeed;uniform vec3 uColor;uniform vec2 uCanvasSize;varying vec2 vUv;float random(vec2 st) {  return fract(sin(dot(st.xy + uSeed, vec2(12.9898, 78.233))) * 43758.5453123);}void main() {  float boxSize = (uCanvasSize.x - uGap * (uCols - 1.0)) / uCols;  vec2 gridSize = vec2((boxSize + uGap) / uCanvasSize.x, (boxSize + uGap) / uCanvasSize.y);  vec2 cell = floor(vUv / gridSize);  vec2 cellUv = (vUv - cell * gridSize) / gridSize;    if (cellUv.x > boxSize / (boxSize + uGap) || cellUv.y > boxSize / (boxSize + uGap)) {    discard;  }    float opacity = sin(uTime * 2.0 + random(cell) * 10.0) * 0.5 + 0.5;    gl_FragColor = vec4(uColor, opacity);}`,transparent:!0}),s=new l.Mesh(t,i);s.position.z=-.01,this.scene.add(s)}init(){this.scene=new l.Scene,this.camera=new l.OrthographicCamera(-this.canvasSize.w/2,this.canvasSize.w/2,this.canvasSize.h/2,-this.canvasSize.h/2,.01,10),this.renderer=new l.WebGLRenderer({alpha:!0,colorSpace:l.SRGBColorSpace}),this.renderer.setSize(this.canvasSize.w,this.canvasSize.h),this.renderer.setPixelRatio(window.devicePixelRatio),this.container.appendChild(this.renderer.domElement),this.createBoxes(),this.setupIntersectionObserver(),this.animate()}}class w{constructor({wrap:t,cols:i,rows:s,size:e,gap:r}){h(this,"svgNS","http://www.w3.org/2000/svg");h(this,"timeline",gsap.timeline());h(this,"omitIndexes",{"2x10":[0,3,5,6,9,10,12,18]});h(this,"probability",.4);this.wrap=t,this.cols=i,this.rows=s,this.size=e,this.gap=r,this.init()}setupIntersectionObserver(){const t={root:null,rootMargin:"0px",threshold:1},i=new IntersectionObserver(s=>{s.forEach(e=>{e.isIntersecting&&(this.animateIn(!0),i.disconnect())})},t);i.observe(this.wrap)}animateIn(t=!1){this.timeline.clear(),this.timeline.to(this.dots,{keyframes:{opacity:[1,.2,.8,.1,1,.5,1,.3,1]},duration:1,yoyo:!t,repeat:t?0:-1,ease:"none",stagger:{from:"random",ease:"none",amount:1}})}animateOut(){this.timeline.clear(),this.timeline.to(this.dots,{opacity:1,duration:1,overwrite:!0})}createSVG(){this.svg=document.createElementNS(this.svgNS,"svg");const t=2*this.size,i=t+this.gap,s=this.cols*(this.gap+t)-this.gap,e=this.rows*(this.gap+t)-this.gap;this.svg.setAttribute("width",s),this.svg.setAttribute("height",e),this.svg.setAttribute("viewBox",`0 0 ${s} ${e}`),this.svg.setAttribute("fill","none"),this.svg.setAttribute("xmlns",this.svgNS);const r=`${this.cols}x${this.rows}`,a=new Set(this.omitIndexes[r]||[]);let o=0;for(let n=0;n<this.rows;n++)for(let p=0;p<this.cols;p++){if(!a.has(o)&&(a.size>0||Math.random()>this.probability)){const u=document.createElementNS(this.svgNS,"circle"),d=this.size+p*i,v=this.size+n*i;u.setAttribute("cx",d),u.setAttribute("cy",v),u.setAttribute("r",this.size),u.setAttribute("fill","#93957B"),this.svg.appendChild(u)}o++}return this.svg}init(){this.setupIntersectionObserver(),this.wrap.appendChild(this.createSVG()),this.dots=this.wrap.querySelectorAll("circle"),this.wrap.addEventListener("mouseenter",()=>{this.animateIn()}),this.wrap.addEventListener("mouseleave",()=>{this.animateOut()})}}gsap.registerPlugin(MotionPathPlugin);class y{constructor({wrap:t}){this.wrap=t,this.svg=this.wrap.querySelector("svg"),this.ship=this.svg.querySelector(".ship"),this.grip=this.svg.querySelector(".grid"),this.dots=this.svg.querySelectorAll(".dots circle"),this.circles=this.svg.querySelectorAll(".circles > g"),this.pathMain=this.svg.querySelector(".path-main"),this.pathBranch=this.svg.querySelector(".path-branch"),this.pathShip=this.svg.querySelector(".path-ship"),this.barGraph=this.svg.querySelector(".bar-graph"),this.barGraphTop=this.svg.querySelector(".bar-graph-top"),this.timeline=gsap.timeline({paused:!0}),this.init()}trackSvgHeight(){this.wrap.style.height=`${this.svg.getBoundingClientRect().height}px`,new ResizeObserver(i=>{for(const s of i)s.target.style.height=`${this.svg.getBoundingClientRect().height}px`}).observe(this.svg)}createTimeline(){this.timeline.addLabel("shipStart","start+=0.9").set(this.circles,{"--offset":0}).to(this.dots,{y:0,opacity:1,duration:1,ease:"power2.out",stagger:{amount:1}},"start").to(this.circles,{"--offset":1,z:0,ease:"power2.out",stagger:.1,duration:1},"start").to(this.pathMain,{strokeDashoffset:0,duration:1},"start").to(this.pathBranch,{strokeDashoffset:0,duration:1},"start+=0.6").to(this.barGraph,{opacity:1,duration:1},"start+=1.6").to(this.barGraphTop,{y:3,repeat:-1,yoyo:!0,duration:1,ease:"circ.in"},"start+=2").to(this.pathShip,{keyframes:{strokeDashoffset:[gsap.getProperty(this.pathShip,"strokeDashoffset"),0,0],opacity:[1,1,1,0,0],easeEach:"none"},repeat:-1,duration:6,ease:"none"},"shipStart").to(this.ship,{duration:6,repeat:-1,keyframes:{scale:[0,1,1,1,0,0,0,0],easeEach:"none"},ease:"none"},"shipStart").to(this.ship,{duration:3,repeat:-1,motionPath:{path:this.pathShip,align:this.pathShip,autoRotate:10,alignOrigin:[1,.3]},repeatDelay:3,ease:"none"},"shipStart")}setupIntersectionObserver(){const t={root:null,rootMargin:"0px",threshold:1},i=new IntersectionObserver(s=>{s.forEach(e=>{e.isIntersecting&&(this.timeline.play(),i.disconnect())})},t);i.observe(this.wrap)}init(){this.trackSvgHeight(),this.createTimeline(),this.setupIntersectionObserver()}}document.addEventListener("DOMContentLoaded",()=>{const c=document.querySelectorAll(".blinking-boxes"),t=document.querySelectorAll(".blinking-dots"),i=document.querySelectorAll(".animated-graph"),s=document.querySelector(".trajectory-map");c.length&&c.forEach(e=>{const{size:r,gap:a,rows:o,cols:n}=e.dataset;new S({container:e,boxSize:Number(r??4),gap:Number(a??2),rows:Number(o??24),cols:Number(n??8)})}),t.length&&t.forEach(e=>{const{size:r,gap:a,rows:o,cols:n}=e.dataset;new w({wrap:e,cols:Number(n??2),rows:Number(o??10),size:Number(r??2.5),gap:Number(a??5)})}),s&&new y({wrap:s}),i.length&&i.forEach(e=>{const{vertical:r,amplitude:a,frequency:o,attenuation:n,speed:p,flip:u}=e.dataset;new b({wrap:e,vertical:r==="true",amplitude:Number(a??1),frequency:Number(o??1),attenuation:Number(n??2),speed:Number(p??1),flip:u==="true"})})});
